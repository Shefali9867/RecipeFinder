{"version":3,"sources":["logo.svg","components/layout/Navbar.js","components/layout/Header.js","components/pages/Home.js","components/pages/DefaultPage.js","components/Search.js","components/RecipeListItem.js","components/layout/Loader.js","config.js","components/RecipeList.js","components/pages/Recipes.js","components/pages/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","React","createElement","Menu","borderless","fixed","Item","Header","style","marginRight","src","logo","alt","as","Link","to","content","NavLink","props","className","bgClass","title","children","Home","Button","color","size","DefaultPage","Search","query","setQuery","useState","Grid","textAlign","columns","Column","Form","onSubmit","handleSubmit","onSearch","Input","placeholder","action","icon","fluid","onChange","e","target","value","RecipeListItem","_ref","recipe","Card","image_url","height","Content","Description","publisher","extra","recipe_id","href","source_url","Loader","Image","centered","RECIPE_API","RecipeList","state","setState","recipes","loading","useEffect","getRecipes","async","url","response","fetch","result","json","err","console","log","Container","doubling","map","i","key","Recipes","Fragment","RecipeDetails","match","params","getRecipe","container","stackable","marginBottom","publisher_url","Segment","Group","ingredients","ingred","App","Router","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13334908.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cc3fff7e.svg\";","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport logo from \"../../logo.svg\";\n\nfunction Navbar() {\n  return (\n    <Menu borderless fixed=\"top\">\n      <Menu.Item>\n        <Menu.Header style={{ marginRight: \"25px\" }}>\n          <img src={logo} alt=\"logo\" />\n        </Menu.Header>\n      </Menu.Item>\n      <Menu.Item as={Link} to=\"/\" content=\"Home\" />\n      <Menu.Item as={NavLink} to=\"/recipes\" content=\"Recipes\" />\n    </Menu>\n  );\n}\nexport default Navbar;\n","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <div className={props.bgClass}>\n      <div className=\"text-content\">\n        <h1 className=\"header-title\">{props.title}</h1>\n        {props.children}\n      </div>\n    </div>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"semantic-ui-react\";\nimport Header from \"../layout/Header\";\n\nfunction Home() {\n  return (\n    <Header bgClass=\"bg-image\" title=\"Amazing Recipes\">\n      <Button\n        as={Link}\n        to=\"/recipes\"\n        color=\"linkedin\"\n        content=\"SEARCH RECIPES\"\n        size=\"big\"\n      />\n    </Header>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../layout/Header\";\n\nfunction DefaultPage() {\n  return (\n    <Header bgClass=\"bg-default-image\" title=\"404\">\n      <p className=\"sub-text\">You are in the wrong place</p>\n      <Button as={Link} to=\"/\" color=\"grey\" content=\"RETURN HOME\" size=\"big\" />\n    </Header>\n  );\n}\nexport default DefaultPage;\n","import React, { useState } from \"react\";\nimport { Grid, Form, Input } from \"semantic-ui-react\";\n\nfunction Search(props) {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    props.onSearch(query);\n  };\n\n  return (\n    <Grid textAlign=\"center\" columns={2} className=\"search-box\">\n      <Grid.Column>\n        <h2 className=\"search-heading\">\n          Search Recipes With{\" \"}\n          <span style={{ color: \"#ff3333\" }}>Food2Fork</span>\n        </h2>\n        <h4>Type Recipes Separated By Comma</h4>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"chicken,onion,carrots\"\n            action={{ icon: \"search\", color: \"blue\" }}\n            fluid\n            onChange={handleChange}\n            value={query}\n          />\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Button } from \"semantic-ui-react\";\n\nfunction RecipeListItem({ recipe }) {\n  return (\n    <Card>\n      <img src={recipe.image_url} height={170} alt=\"thumbnail\" />\n      <Card.Content>\n        <Card.Header content={recipe.title} />\n        <Card.Description>\n          <h4 className=\"text-cursive txt-yellow\">{recipe.publisher}</h4>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Button\n          as={Link}\n          to={`/recipes/${recipe.recipe_id}`}\n          content=\"Details\"\n          color=\"blue\"\n          size=\"tiny\"\n        />\n        <Button\n          as={\"a\"}\n          href={recipe.source_url}\n          target=\"_blank\"\n          content=\"Recipe URL\"\n          color=\"green\"\n          size=\"tiny\"\n        />\n      </Card.Content>\n    </Card>\n  );\n}\nexport default RecipeListItem;\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\n\nfunction Loader() {\n  return <Image src=\"/images/loader.gif\" centered />;\n}\nexport default Loader;\n","export const RECIPE_API = 'https://forkify-api.herokuapp.com/api';\n","import React, { useState, useEffect } from 'react';\nimport { Container, Header, Grid } from 'semantic-ui-react';\nimport RecipeListItem from './RecipeListItem';\nimport Loader from './layout/Loader';\nimport { RECIPE_API } from '../config';\n\nfunction RecipeList(props) {\n  const [state, setState] = useState({ recipes: [], loading: false });\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line\n  }, [props.query]);\n\n  const getRecipes = async () => {\n    try {\n      const url = `${RECIPE_API}/search?q=${props.query}`;\n      setState({ ...state, loading: true });\n      const response = await fetch(url);\n      const result = await response.json();\n      setState({ recipes: result.recipes, loading: false });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container>\n      <Header\n        size=\"huge\"\n        content={props.query ? `RECIPE LIST FOR: ${props.query}` : 'RECIPE LIST'}\n        className=\"text-cursive\"\n        textAlign=\"center\"\n      />\n      {state.loading && <Loader />}\n      <Grid doubling columns={4}>\n        {state.recipes &&\n          state.recipes.map((recipe, i) => {\n            return (\n              <Grid.Column key={i}>\n                <RecipeListItem recipe={recipe} />\n              </Grid.Column>\n            );\n          })}\n      </Grid>\n    </Container>\n  );\n}\nexport default RecipeList;\n","import React, { useState } from \"react\";\nimport Search from \"../Search\";\nimport RecipeList from \"../RecipeList\";\n\nfunction Recipes() {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSearch = query => {\n    setQuery(query);\n  };\n\n  return (\n    <React.Fragment>\n      <Search onSearch={handleSearch} />\n      <RecipeList query={query} />\n    </React.Fragment>\n  );\n}\nexport default Recipes;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Image, Header, Segment } from 'semantic-ui-react';\nimport Loader from '../layout/Loader';\nimport { RECIPE_API } from '../../config';\n\nfunction RecipeDetails(props) {\n  const [state, setState] = useState({ recipe: {}, loading: true });\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      try {\n        const response = await fetch(`${RECIPE_API}/get?rId=${props.match.params.recipe_id}`);\n        const result = await response.json();\n        setState({ recipe: result.recipe, loading: false });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getRecipe();\n    //eslint-disable-next-line\n  }, []);\n\n  if (state.recipe) {\n    return (\n      <Grid container stackable columns={2} className=\"detailPageContent\">\n        <Grid.Column>\n          <Button\n            as={Link}\n            to=\"/recipes\"\n            color=\"yellow\"\n            content=\"Back to recipe list\"\n            style={{ marginBottom: '3rem' }}\n          />\n          {state.loading && <Loader />}\n          <Image src={state.recipe.image_url} />\n        </Grid.Column>\n        <Grid.Column>\n          <Header size=\"medium\">{state.recipe.title}</Header>\n          <p className=\"text-cursive txt-yellow\">Provided By {state.recipe.publisher}</p>\n          <Button\n            as=\"a\"\n            href={state.recipe.publisher_url}\n            target=\"_blank\"\n            color=\"blue\"\n            content=\"Publisher Webpage\"\n          />\n          <Button\n            as=\"a\"\n            href={state.recipe.source_url}\n            target=\"_blank\"\n            color=\"green\"\n            content=\"Recipe URL\"\n          />\n\n          <Header size=\"large\" content=\"Ingredients\" />\n          <Segment.Group>\n            {state.recipe.ingredients &&\n              state.recipe.ingredients.map((ingred, i) => (\n                <Segment key={i}>\n                  <h5 className=\"text-cursive\">{ingred}</h5>\n                </Segment>\n              ))}\n          </Segment.Group>\n        </Grid.Column>\n      </Grid>\n    );\n  } else {\n    return (\n      <Grid container stackable columns={2} className=\"detailPageContent\">\n        <Header>Nothing found !!</Header>\n      </Grid>\n    );\n  }\n}\nexport default RecipeDetails;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport DefaultPage from \"./components/pages/DefaultPage\";\nimport Recipes from \"./components/pages/Recipes\";\nimport RecipeDetails from \"./components/pages/RecipeDetails\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/recipes\" component={Recipes} />\n          <Route exact path=\"/recipes/:recipe_id\" component={RecipeDetails} />\n          <Route component={DefaultPage} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}